def is_safe(board, row, col):
    for i in range(row):
        if board[i] == col or \
           board[i] - i == col - row or \
           board[i] + i == col + row:
            return False
    return True

def solve_nqueens(board, row, n):
    if row == n:
        print_board(board)
        exit()
    for col in range(n):
        if is_safe(board, row, col):
            board[row] = col
            solve_nqueens(board, row + 1, n)

def print_board(board):
    for i in range(len(board)):
        for j in range(len(board)):
            if board[i] == j:
                print('1', end=' ')
            else:
                print('0', end=' ')
        print()

def nqueens():
    n = int(input("Enter the number of queens: "))
    board = [-1] * n
    solve_nqueens(board, 0, n)

nqueens()
